@model PhoneBook.ViewModels.ContactVM.ContactEditVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm<ContactsController>(c => c.Edit(), FormMethod.Post, null, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div class="photo-cont">
            <img class="contact-photo" src="/Uploads/@Model.ImagePath" alt="Image" />
            @if (Model.ImagePath != "default.png")
            {

                <a href="#" class="deleteImage" data-contactID=@Model.ID>Delete image</a>
            }
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.ImagePath)


        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ImageUpload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ImageUpload, new { htmlAttributes = new { @class = "form-control", @id = "image-upload" }, type = "file" })
                @Html.ValidationMessageFor(model => model.ImageUpload, "", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CountryID, Model.Countries, new { htmlAttributes = new { @class = "form-control" }, @id = "country" })
                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CityID, Model.Cities, "Select city", new { htmlAttributes = new { @class = "form-control" }, @id = "city" })
                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model =>model.ImageUpload.FileName, new { @class = "control-label col-md-2" })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", htmlAttributes: new { @class = "control-label col-md-2" })

                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Groups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var gr in Model.Groups)
                {
                    <input type="checkbox" name="SelectedGroups" value="@gr.Value" id="@gr.Value" @Html.Raw(gr.Selected ? "checked" : String.Empty) />
                    <label for="@gr.Value">@gr.Text</label>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="save-btn" />
            </div>
        </div>

    </div>
}

<div>
    @(Html.ActionLink<ContactsController>("Back to List", c => c.List(1)))
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('.deleteImage').click(function () {
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("DeleteImage")',
                    data: JSON.stringify({ contactID: $(this).attr('data-contactID') }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function () {
                        $(".contact-photo").attr("src", "/Uploads/default.png");
                        $(".deleteImage ").hide();
                        $("#ImagePath").val("default.png");
                    },
                    error: function () { alert('error'); }
                });
            });
            $('#country').change(function () {
                var country = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetCities")',
                    data: JSON.stringify({ countryID: country }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: (function (city) {
                        $('#city').empty();
                        $.each(city, function (key, value) {
                            $('#city').append($("<option></option>").val(value.Value).html(value.Text))
                        });
                    }),
                    error: function () { alert('error'); }
                });
            });

        });
    </script>
}
